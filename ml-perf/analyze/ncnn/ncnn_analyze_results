#!/bin/sh
num_cores=1
num_threads=0

network=$1
benchmark_type=$2
temp_file=$3
out_file=$4
thread=$5
batch=$6

# batching parameters
start=$(echo "${6}"|cut -d: -f1)
end=$(echo "${6}"|cut -d: -f2)
step=$(echo "${6}"|cut -d: -f3)

#shape dimensions
xdim=$(echo "${7}"| cut -d: -f1)
ydim=$(echo "${7}"| cut -d: -f2)
channel=$(echo "${7}"| cut -d: -f3)

parse_shape ()
{
    printf "%-10s  %-8s  %-8s  %-8s\n" "shape" "min" "max" "avg" > "${out_file}"
    cat "${temp_file}" | while read LINE; do
        set -- ${LINE}
        if [ "${1}" = "${network}" ]; then
            shape="${xdim}:${ydim}:${channel}"
            printf "%-10s  %-8s  %-8s  %-8s\n" "${shape}" "${4}" "${7}" "${10}" >> "${out_file}"
        fi
    done
}

parse_batch ()
{
    printf "%-6s  %-8s  %-8s  %-8s\n" "batch" "min" "max" "avg" > "${out_file}"
    cat "${temp_file}" | while read LINE; do
        set -- ${LINE}
        if [ "${1}" = "${network}" ]; then
            batch_count=$(($start+$i*$step))
            printf "%-6s  %-8s  %-8s  %-8s\n" "${batch_count}" "${4}" "${7}" "${10}" >> "${out_file}"
        fi
    done
}

parse_monoshot ()
{
    printf "%-8s  %-8s  %-8s\n" "min" "max" "avg" > "${out_file}"
    cat "${temp_file}" | while read LINE; do
        set -- ${LINE}
        if [ "${1}" = "${network}" ]; then
            printf "%-8s  %-8s  %-8s\n" "${4}" "${7}" "${10}" >> "${out_file}"
        fi
    done
}

parse_core_thread_scale ()
{
    printf "%-6s  %-8s  %-8s  %-8s  %-8s\n" "#cores" "#threads" "min" "max" "avg" > "${out_file}"
    cat "${temp_file}" | while read LINE; do
        set -- ${LINE}
        if [ "${1}" = "${network}" ]; then
            num_threads=$((num_threads+1))
            printf "%-6s  %-8s  %-8s  %-8s  %-8s\n" "${num_cores}" "${num_threads}" "${4}" "${7}" "${10}" >> "${out_file}"
            if [ "${num_threads}" = "${thread}" ]; then
                num_cores=$((num_cores+1))
                num_threads=0
            fi
        fi
    done
}

parse_core_scale ()
{
    printf "%-5s  %-8s  %-8s  %-8s\n" "#cores" "min" "max" "avg" > "${out_file}"
    cat "${temp_file}" | while read LINE; do
        set -- ${LINE}
        if [ "${1}" = "${network}" ]; then
            printf "%-5s   %-8s  %-8s  %-8s\n" "${num_cores}" "${4}" "${7}" "${10}" >> "${out_file}"
            num_cores=$((num_cores+1))
        fi
    done
}

parse_thread_scale ()
{
    printf "%-8s  %-8s  %-8s  %-8s  %-8s  \n" "#threads" "min" "max" "avg"  > "${out_file}"
    cat "${temp_file}" | while read LINE; do
        set -- ${LINE}
        if [ "${1}" = "${network}" ]; then
            num_threads=$((num_threads+1))
            printf "%-5s   %-8s  %-8s  %-8s\n" "${num_threads}" "${4}" "${7}" "${10}" >> "${out_file}"
        fi
    done
}


if [ "${benchmark_type}" = "core_scale" ]; then
    parse_core_scale
elif [ "${benchmark_type}" = "core_thread_scale" ]; then
    parse_core_thread_scale
elif [ "${benchmark_type}" = "monoshot" ]; then
    parse_monoshot
elif [ "${benchmark_type}" = "batch_scale" ]; then
    parse_batch
elif [ "${benchmark_type}" = "shape_scale" ]; then
    parse_shape
elif [ "${benchmark_type}" = "thread_scale" ]; then
    parse_thread_scale
fi
